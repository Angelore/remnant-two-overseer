<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             xmlns:vm="using:RemnantOverseer.ViewModels"
             xmlns:local="using:RemnantOverseer"
             xmlns:models="using:RemnantOverseer.Models"
             xmlns:controls="using:RemnantOverseer.Controls"
             xmlns:util="using:RemnantOverseer.Utilities"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="550"
             x:Class="RemnantOverseer.Views.CharacterSelectView"
             x:DataType="vm:CharacterSelectViewModel">


  <UserControl.Resources>
    <util:ArchetypeToImageConverter x:Key="ArchetypeToImageConverter"/>
    <util:ArchetypeToBackgroundConverter x:Key="ArchetypeToBackgroundConverter"/>
    <util:DoubleToCornerRadiusConverter x:Key="DoubleToCornerRadiusConverter" />
    <sys:Double x:Key="BorderRadiusValue">10</sys:Double>
    <sys:Double x:Key="OuterBorderRadiusValue">12</sys:Double>
    <sys:Double x:Key="MaskBorderRadiusValue">12</sys:Double>
    <!--Can't set corner radius from a static value: https://stackoverflow.com/questions/9096256/cannot-set-cornerradius-value-from-static-resource -->
    <!--<CornerRadius x:Key="BorderRadius" TopLeft="{StaticResource BorderRadiusValue}" TopRight="{StaticResource BorderRadiusValue}" BottomRight="{StaticResource BorderRadiusValue}" BottomLeft="{StaticResource BorderRadiusValue}" />-->

    <SolidColorBrush x:Key="PowerLevelBackgoundBrush" Color="{StaticResource GlobalBackroundColor}" Opacity="0.5"/>
  </UserControl.Resources>

  <Grid ColumnDefinitions="*" RowDefinitions="*, Auto, Auto, *" Margin="10">

    <!--<TextBlock Grid.Column="0" Grid.Row="1" Text="Select a character" FontSize="30" FontWeight="Bold" Margin="0 10 0 30" HorizontalAlignment="Center" IsVisible="{Binding !IsLoading}"/>-->

    <ListBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding Characters}" SelectionMode="Single"
             ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.AllowAutoHide="False">
      <ListBox.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" />
        </ItemsPanelTemplate>
      </ListBox.ItemsPanel>
      <ListBox.Styles>
        <Style Selector="ListBox">
          <Setter Property="Background" Value="Transparent"/>
        </Style>
        <!-- https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/ListBoxItem.xaml -->
        <!-- https://github.com/AvaloniaUI/Avalonia/discussions/8382 -->
        <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
          <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
          <Setter Property="Background" Value="Transparent" />
        </Style>
        <!-- Hax -->
        <Style Selector="ToggleButton#ListBoxButton:not(:pointerover) /template/ ContentPresenter">
          <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="ToggleButton#ListBoxButton:pointerover /template/ ContentPresenter">
          <Setter Property="Background" Value="Transparent" />
        </Style>
      </ListBox.Styles>
      <ListBox.ItemTemplate>
        <DataTemplate x:DataType="models:Character">
          <ToggleButton Name="ListBoxButton" IsChecked="{Binding IsSelected}"
                        Command="{Binding $parent[ListBox].((vm:CharacterSelectViewModel)DataContext).CharacterSelected}"
                        CommandParameter="{Binding}">
            <Panel>
              <!-- Wtf? -->
              <!-- https://stackoverflow.com/questions/54641525/how-to-add-individual-rounded-corners-on-an-image-control -->
              <!-- https://stackoverflow.com/questions/324641/how-to-make-the-contents-of-a-round-cornered-border-be-also-round-cornered -->
              <Grid Margin="5">
                <Border Name="Mask" Background="Black" CornerRadius="{Binding, Converter={StaticResource DoubleToCornerRadiusConverter}, ConverterParameter={StaticResource MaskBorderRadiusValue}}" />
                <Grid.OpacityMask>
                  <VisualBrush Visual="{Binding ElementName=Mask}" />
                </Grid.OpacityMask>

                <Grid RowDefinitions="Auto, 10, Auto">

                  <!-- Class Icons -->
                  <ContentPresenter Grid.Row="0" Content="{Binding}" RenderOptions.BitmapInterpolationMode="HighQuality">
                    <ContentPresenter.Styles>
                      <Style Selector="Border.Container">
                        <Setter Property="Background" Value="Gray" />
                        <Setter Property="MaxHeight" Value="250" />
                        <Setter Property="MaxWidth" Value="250" />
                      </Style>
                    </ContentPresenter.Styles>
                    <ContentPresenter.DataTemplates>
                      <controls:CharacterSelectTemplateSelector>
                        <DataTemplate x:Key="OneArchetypeTemplate" x:DataType="models:Character">
                          <Border Classes="Container">
                            <Panel>
                              <Border Background="{Binding Archetype, Converter={StaticResource ArchetypeToBackgroundConverter}}"/>
                              <Image Source="{Binding Archetype, Converter={StaticResource ArchetypeToImageConverter}}"/>
                            </Panel>
                          </Border>
                        </DataTemplate>
                        <DataTemplate x:Key="TwoArchetypeTemplate" x:DataType="models:Character">
                          <Border Classes="Container">
                            <Panel>
                              <!-- Background colors -->
                              <Grid ColumnDefinitions="*,*">
                                <Border Grid.Column="0" Background="{Binding Archetype, Converter={StaticResource ArchetypeToBackgroundConverter}}"/>
                                <Border Grid.Column="1" Background="{Binding SubArchetype, Converter={StaticResource ArchetypeToBackgroundConverter}}"/>
                              </Grid>
                              <Image Source="{Binding Archetype, Converter={StaticResource ArchetypeToImageConverter}}">
                                <!-- What? -->
                                <!-- https://learn.microsoft.com/en-us/dotnet/api/system.windows.uielement.clip?view=windowsdesktop-9.0&redirectedfrom=MSDN#System_Windows_UIElement_Clip -->
                                <Image.Clip>
                                  <!-- How to round corners. Might come in useful -->
                                  <!--<RectangleGeometry Rect="0,0,123,250" RadiusX="{StaticResource BorderRadiusValue}" RadiusY="{StaticResource BorderRadiusValue}" ></RectangleGeometry>-->
                                  <RectangleGeometry Rect="0,0,123,250"></RectangleGeometry>
                                </Image.Clip>
                              </Image>
                              <Image Source="{Binding SubArchetype, Converter={StaticResource ArchetypeToImageConverter}}">
                                <Image.Clip>
                                  <RectangleGeometry Rect="127,0,123,250"></RectangleGeometry>
                                </Image.Clip>
                              </Image>
                            </Panel>
                          </Border>
                        </DataTemplate>
                      </controls:CharacterSelectTemplateSelector>
                    </ContentPresenter.DataTemplates>
                  </ContentPresenter>

                  <!-- Other Icons -->
                  <Grid Grid.Row="0" ColumnDefinitions="Auto, *, Auto" RowDefinitions="*, Auto">
                    <Panel Grid.Row="1" Grid.Column="0" Margin="10 5">
                      <Border Background="{StaticResource PowerLevelBackgoundBrush}" CornerRadius="5"></Border>
                      <StackPanel Orientation="Horizontal" Margin="5" ToolTip.Tip="Power Level" IsHitTestVisible="True">
                        <PathIcon Data="{StaticResource PowerLevelIcon}" Height="20" Width="20" Margin="5 0"/>
                        <TextBlock Text="{Binding FormattedPowerLevel}" FontWeight="Bold" FontSize="20" />
                      </StackPanel>
                    </Panel>
                    <Panel Grid.Row="1" Grid.Column="2" Margin="10 5">
                      <Border Background="{StaticResource PowerLevelBackgoundBrush}" CornerRadius="5"></Border>
                      <StackPanel Orientation="Horizontal" Margin="5" IsVisible="{Binding IsHardcore}">
                        <PathIcon Data="{StaticResource HardcoreIcon}" Height="20" Width="20" Margin="5 0" ToolTip.Tip="Hardcore"/>
                      </StackPanel>
                    </Panel>
                  </Grid>

                  <Separator Grid.Row="1" Height="2" BorderBrush="{StaticResource InnerBorderBrush}" Background="{StaticResource InnerBorderBrush}" />

                  <!-- Info -->
                  <Grid Grid.Row="2" RowDefinitions="*,*,*" VerticalAlignment="Center" Margin="10">
                    <Grid.Styles>
                      <Style Selector="TextBlock">
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="16" />
                      </Style>
                    </Grid.Styles>
                    <TextBlock Grid.Row="0" Text="{Binding Archetype}"/>
                    <TextBlock Grid.Row="1" Text="{Binding SubArchetype}" Margin="0 3 0 0" IsVisible="{Binding SubArchetype, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 3 0 0" HorizontalAlignment="Center">
                      <PathIcon Data="{StaticResource PlaytimeIcon}" Height="12" Width="12" Margin="3 0" />
                      <TextBlock Text="{Binding FormattedPlaytime}"/>
                    </StackPanel>
                  </Grid>

                </Grid>
              </Grid>
              
              <!-- Outline and inline shadow -->
              <!-- background needs to be null to not overlay tooltips for hit test purposes -->
              <Border Name="InnerBorder" BorderBrush="{StaticResource InnerBorderBrush}" BorderThickness="2"
                      CornerRadius="{Binding, Converter={StaticResource DoubleToCornerRadiusConverter}, ConverterParameter={StaticResource BorderRadiusValue}}"
                      Background="{x:Null}" Margin="5">
                <Border.Styles>
                  <Style Selector="Border#InnerBorder">
                    <Setter Property="BoxShadow" Value="inset 0 0 4 1 #FF070707" />
                  </Style>
                </Border.Styles>
              </Border>
              <Border Name="OuterBorder" BorderThickness="3" CornerRadius="12" Background="{x:Null}">
                <Border.Styles>
                  <Style Selector="ListBoxItem Border#OuterBorder" >
                    <Setter Property="BorderBrush" Value="{StaticResource OuterBorderInactiveBrush}" />
                  </Style>
                  <Style Selector="ListBoxItem:pointerover Border#OuterBorder">
                    <Setter Property="BorderBrush" Value="{StaticResource OuterBorderBrush}" />
                    <Setter Property="BoxShadow" Value="0 0 7 3 #c3c3c3" />
                  </Style>
                  <Style Selector="ToggleButton#ListBoxButton:checked Border#OuterBorder">
                    <Setter Property="BorderBrush" Value="{StaticResource OuterBorderBrush}" />
                    <Setter Property="BoxShadow" Value="0 0 4 2 #c3c3c3" />
                  </Style>
                </Border.Styles>
              </Border>
            </Panel>
          </ToggleButton>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>

    <controls:LoadingIndicator Grid.RowSpan="4" IsLoading="{Binding IsLoading}"/>
  </Grid>
</UserControl>
